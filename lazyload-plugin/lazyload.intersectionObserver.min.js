!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.IntersectionObserver=e()}(this,function(){"use strict";function r(){return{top:0,bottom:0,left:0,right:0,width:0,height:0}}function h(){return window.performance&&performance.now?performance.now():(new Date).getTime()}function f(t){var e;try{e=t.getBoundingClientRect()}catch(t){}return e?(e.width&&e.height||(e={top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.right-e.left,height:e.bottom-e.top}),e):r()}function e(t,e){for(var n=e;n;){if(n==t)return!0;n=m(n)}return!1}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var m=function(t){var e=t.parentNode;return e&&11==e.nodeType&&e.host?e.host:e};function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function u(t){s(this,u),this.time=t.time,this.target=t.target,this.rootBounds=t.rootBounds,this.boundingClientRect=t.boundingClientRect,this.intersectionRect=t.intersectionRect||r(),this.isIntersecting=!!t.intersectionRect;var e=this.boundingClientRect,n=e.width*e.height,i=this.intersectionRect,o=i.width*i.height;this.intersectionRatio=n?o/n:this.isIntersecting?1:0}function t(t,e,n,i){var o=3<arguments.length&&void 0!==i&&i;t.addEventListener?t.addEventListener(e,n,o):t.attachEvent&&t.attachEvent("on"+e,n)}function n(t,e,n,i){var o=3<arguments.length&&void 0!==i&&i;t.removeEventListener?t.removeEventListener(e,n,o):t.detatchEvent&&t.detatchEvent("on"+e,n)}var o=[],a=(function(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}(c,[{key:"observe",value:function(e){if(!this._observationTargets.some(function(t){return t.element==e})){if(!e||1!=e.nodeType)throw new Error("target must be an Element");this._registerInstance(),this._observationTargets.push({element:e,entry:null}),this._monitorIntersections()}}},{key:"unobserve",value:function(e){this._observationTargets=this._observationTargets.filter(function(t){return t.element!=e}),this._observationTargets.length||(this._unmonitorIntersections(),this._unregisterInstance())}},{key:"disconnect",value:function(){this._observationTargets=[],this._unmonitorIntersections(),this._unregisterInstance()}},{key:"takeRecords",value:function(){var t=this._queuedEntries.slice();return this._queuedEntries=[],t}},{key:"_initThresholds",value:function(t){var e=0<arguments.length&&void 0!==t?t:[0];return Array.isArray(e)||(e=[e]),e.sort().filter(function(t,e,n){if("number"!=typeof t||isNaN(t)||t<0||1<t)throw new Error("threshold must be a number between 0 and 1 inclusively");return t!==n[e-1]})}},{key:"_parseRootMargin",value:function(t){var e=(t||"0px").split(/\s+/).map(function(t){var e=/^(-?\d*\.?\d+)(px|%)$/.exec(t);if(!e)throw new Error("rootMargin must be specified in pixels or percent");return{value:parseFloat(e[1]),unit:e[2]}});return e[1]=e[1]||e[0],e[2]=e[2]||e[0],e[3]=e[3]||e[1],e}},{key:"_monitorIntersections",value:function(){this._monitoringIntersections||(this._monitoringIntersections=!0,this._checkForIntersections(),this.POLL_INTERVAL?this._monitoringInterval=setInterval(this._checkForIntersections,this.POLL_INTERVAL):(t(window,"resize",this._checkForIntersections,!0),t(document,"scroll",this._checkForIntersections,!0),"MutationObserver"in window&&(this._domObserver=new MutationObserver(this._checkForIntersections),this._domObserver.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0}))))}},{key:"_unmonitorIntersections",value:function(){this._monitoringIntersections&&(this._monitoringIntersections=!1,clearInterval(this._monitoringInterval),this._monitoringInterval=null,n(window,"resize",this._checkForIntersections,!0),n(document,"scroll",this._checkForIntersections,!0),this._domObserver&&(this._domObserver.disconnect(),this._domObserver=null))}},{key:"_checkForIntersections",value:function(){var a=this._rootIsInDom(),c=a?this._getRootRect():r();this._observationTargets.forEach(function(t){var e=t.element,n=f(e),i=this._rootContainsTarget(e),o=t.entry,r=a&&i&&this._computeTargetAndRootIntersection(e,c),s=t.entry=new u({time:h(),target:e,boundingClientRect:n,rootBounds:c,intersectionRect:r});o?a&&i?this._hasCrossedThreshold(o,s)&&this._queuedEntries.push(s):o&&o.isIntersecting&&this._queuedEntries.push(s):this._queuedEntries.push(s)},this),this._queuedEntries.length&&this._callback(this.takeRecords(),this)}},{key:"_computeTargetAndRootIntersection",value:function(t,e){if("none"!=window.getComputedStyle(t).display){for(var n,i,o,r,s,a,c,h,u=f(t),l=m(t),d=!1;!d;){var v=null,g=1==l.nodeType?window.getComputedStyle(l):{};if("none"==g.display)return;if(l==this.root||l==document?(d=!0,v=e):l!=document.body&&l!=document.documentElement&&"visible"!=g.overflow&&(v=f(l)),v&&(n=v,i=u,o=Math.max(n.top,i.top),r=Math.min(n.bottom,i.bottom),s=Math.max(n.left,i.left),a=Math.min(n.right,i.right),h=r-o,!(u=0<=(c=a-s)&&0<=h&&{top:o,bottom:r,left:s,right:a,width:c,height:h})))break;l=m(l)}return u}}},{key:"_getRootRect",value:function(){var t;if(this.root)t=f(this.root);else{var e=document.documentElement,n=document.body;t={top:0,left:0,right:e.clientWidth||n.clientWidth,width:e.clientWidth||n.clientWidth,bottom:e.clientHeight||n.clientHeight,height:e.clientHeight||n.clientHeight}}return this._expandRectByRootMargin(t)}},{key:"_expandRectByRootMargin",value:function(n){var t=this._rootMarginValues.map(function(t,e){return"px"==t.unit?t.value:t.value*(e%2?n.width:n.height)/100}),e={top:n.top-t[0],right:n.right+t[1],bottom:n.bottom+t[2],left:n.left-t[3]};return e.width=e.right-e.left,e.height=e.bottom-e.top,e}},{key:"_hasCrossedThreshold",value:function(t,e){var n=t&&t.isIntersecting?t.intersectionRatio||0:-1,i=e.isIntersecting?e.intersectionRatio||0:-1;if(n!==i)for(var o=0;o<this.thresholds.length;o++){var r=this.thresholds[o];if(r==n||r==i||r<n!=r<i)return!0}}},{key:"_rootIsInDom",value:function(){return!this.root||e(document,this.root)}},{key:"_rootContainsTarget",value:function(t){return e(this.root||document,t)}},{key:"_registerInstance",value:function(){o.indexOf(this)<0&&o.push(this)}},{key:"_unregisterInstance",value:function(){var t=o.indexOf(this);-1!=t&&o.splice(t,1)}}]),c);function c(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(s(this,c),this.THROTTLE_TIMEOUT=100,this.POLL_INTERVAL=null,"function"!=typeof t)throw new Error("callback must be a function");if(e.root&&1!=e.root.nodeType)throw new Error("root must be an Element");this._checkForIntersections=function(t,e,n){var i=null,o=0,r=(2<arguments.length&&void 0!==n?n:{maxTime:1e3}).maxTime;return function(){i?h()-o>r&&(t(),clearTimeout(i),i=null):i=setTimeout(function(){o=h(),t(),i=null},e)}}(this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT),this._callback=t,this._observationTargets=[],this._queuedEntries=[],this._rootMarginValues=this._parseRootMargin(e.rootMargin),this.thresholds=this._initThresholds(e.threshold),this.root=e.root||null,this.rootMargin=this._rootMarginValues.map(function(t){return t.value+t.unit}).join(" ")}var l=window.IntersectionObserver;return"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in IntersectionObserverEntry.prototype?"isIntersecting"in IntersectionObserverEntry.prototype||Object.defineProperty(IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return 0<this.intersectionRatio}}):l=a,l}),function(){var e='@charset "utf-8";.progress-images{position:relative;max-width:100%;margin:auto}.progress-images--placeholder{width:100%;height:0}.progress-images--canvas{position:absolute;left:0;top:0;width:100%;opacity:1;visibility:visible;transition:visibility 0s linear .5s,opacity .1s .4s}.progress-images--original{position:absolute;left:0;top:0;width:100%;visibility:hidden;opacity:0;transition:visibility 0s linear 0s,opacity .4s 0s}',n=document.createElement("style");if(document.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=e);else try{n.innerHTML=e}catch(t){n.innerText=e}}(),window.addEventListener("load",function(t){var e=document.querySelectorAll("img[data-original]"),n=new IntersectionObserver(function(t){t.forEach(function(t){0<t.intersectionRatio&&(n.unobserve(t.target),function(e){var n=e.getAttribute("data-original");if(!n)return;var i=new Image;e.style.opacity="0",i.onload=function(){var t=e.nextSibling;e.setAttribute("src",n),e.style.opacity="1",e.style.visibility="visible","canvas"===t.nodeName.toLowerCase()&&(t.style.opacity="0",t.style.visibility="hidden"),i.onload=null,i=null},i.src=n}(t.target))})});e.forEach(function(t){var i,o,r,s;n.observe(t),setTimeout(function(){!function(t){var e=t.parentNode;if(-1!==t.parentNode.className.indexOf("fancybox")){var n=t.getAttribute("data-original");e.setAttribute("href",n)}}(t)}),i=t,o=document.createElement("canvas"),r=o.getContext("2d"),(s=new Image).onload=function(){var t=s.width,e=s.height,n=i.parentNode;o.width=t,o.height=e,o.setAttribute("class","progress-images--canvas"),r.filter="blur(3px)",r.drawImage(s,0,0,t,e,0,0,t,e),n.appendChild(o),s.onload=null,s=null},s.src=i.getAttribute("data-thumb")})});